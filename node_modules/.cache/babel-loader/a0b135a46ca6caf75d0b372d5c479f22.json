{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eng_hack\\\\Desktop\\\\caht app\\\\client\\\\src\\\\component\\\\Chat\\\\Chat.js\";\nimport React, { useState, useEffect } from 'react';\nimport Infobar from \"../Infobar/Infobar.js\";\nimport io from 'socket.io-client';\nimport queryString from \"query-string\";\nimport Input from \"../Input/Input.js\";\nimport './Chat.css';\nconst ENDPOINT = \"localhost:5000\";\nlet socket;\n\nconst Chat = props => {\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(window.location.search);\n    socket = io(ENDPOINT);\n    setRoom(room);\n    setName(name);\n    socket.emit(\"join\", {\n      name,\n      room\n    }, error => {\n      if (error) {\n        alert(error);\n      }\n    });\n    return () => {\n      socket.emit(\"disconnect\");\n      socket.off();\n    };\n  }, [ENDPOINT, window.location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages([...messages, message]);\n    });\n  }, [messages]);\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  };\n\n  console.log(message, messages);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"outerContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Infobar, {\n    room: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 14\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    sendMessage: sendMessage,\n    setMessage: setMessage,\n    message: me,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 14\n    }\n  })));\n};\n\nexport default Chat;","map":{"version":3,"sources":["C:/Users/Eng_hack/Desktop/caht app/client/src/component/Chat/Chat.js"],"names":["React","useState","useEffect","Infobar","io","queryString","Input","ENDPOINT","socket","Chat","props","name","setName","room","setRoom","messages","setMessages","message","setMessage","parse","window","location","search","emit","error","alert","off","on","sendMessage","event","preventDefault","console","log","me"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AAEA,OAAO,YAAP;AACA,MAAMC,QAAQ,GAAI,gBAAlB;AACA,IAAIC,MAAJ;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,EAAD,CAAtC;AAIAC,EAAAA,SAAS,CAAC,MAAM;AAEd,UAAM;AAAES,MAAAA,IAAF;AAAQE,MAAAA;AAAR,QAAiBR,WAAW,CAACc,KAAZ,CAAkBC,MAAM,CAACC,QAAP,CAAgBC,MAAlC,CAAvB;AAEAd,IAAAA,MAAM,GAAGJ,EAAE,CAACG,QAAD,CAAX;AAEAO,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAD,IAAAA,OAAO,CAACD,IAAD,CAAP;AAEAH,IAAAA,MAAM,CAACe,IAAP,CAAY,MAAZ,EAAqB;AAACZ,MAAAA,IAAD;AAAQE,MAAAA;AAAR,KAArB,EAAqCW,KAAD,IAAW;AAC5C,UAAIA,KAAJ,EAAW;AACTC,QAAAA,KAAK,CAACD,KAAD,CAAL;AACD;AACH,KAJD;AAKF,WAAO,MAAK;AAAEhB,MAAAA,MAAM,CAACe,IAAP,CAAY,YAAZ;AACbf,MAAAA,MAAM,CAACkB,GAAP;AAAc,KADf;AAGC,GAjBQ,EAiBN,CAACnB,QAAD,EAAWa,MAAM,CAACC,QAAP,CAAgBC,MAA3B,CAjBM,CAAT;AAmBApB,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,MAAM,CAACmB,EAAP,CAAU,SAAV,EAAuBV,OAAD,IAAY;AACjCD,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAaE,OAAb,CAAD,CAAX;AACA,KAFD;AAEG,GAHI,EAGF,CAACF,QAAD,CAHE,CAAT;;AASA,QAAMa,WAAW,GAAIC,KAAD,IAAW;AAC7BA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAGb,OAAH,EAAY;AACVT,MAAAA,MAAM,CAACe,IAAP,CAAY,aAAZ,EAA2BN,OAA3B,EAAoC,MAAMC,UAAU,CAAC,EAAD,CAApD;AACD;AACF,GAND;;AAQFa,EAAAA,OAAO,CAACC,GAAR,CAAYf,OAAZ,EAAoBF,QAApB;AAEE,sBACO;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAU,IAAA,IAAI,EAAEJ,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,KAAD;AAAQ,IAAA,WAAW,EAAEiB,WAArB;AAAkC,IAAA,UAAU,EAAEV,UAA9C;AAA0D,IAAA,OAAO,EAAEe,EAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADP;AAOA,CArDF;;AAsDA,eAAexB,IAAf","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport Infobar from \"../Infobar/Infobar.js\"\r\nimport io from 'socket.io-client';\r\nimport queryString from \"query-string\";\r\nimport Input from \"../Input/Input.js\"\r\n\r\nimport './Chat.css';\r\nconst ENDPOINT  = \"localhost:5000\";\r\nlet socket;\r\n\r\nconst Chat = (props) => {\r\n  const [name, setName] = useState('');\r\n  const [room, setRoom] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    \r\n    const { name, room } = queryString.parse(window.location.search);\r\n\r\n    socket = io(ENDPOINT);\r\n\r\n    setRoom(room);\r\n    setName(name)\r\n\r\n    socket.emit(\"join\" , {name , room}, (error) => {\r\n       if (error) {\r\n         alert(error)\r\n       }\r\n    })\r\n  return () =>{ socket.emit(\"disconnect\");\r\n   socket.off();}\r\n    \r\n  }, [ENDPOINT, window.location.search]);\r\n  \r\n  useEffect(() => {\r\n    socket.on('message' , (message) =>{\r\n     setMessages([...messages,message])\r\n    })} ,[messages]\r\n\r\n  \r\n  )\r\n\r\n\r\n  const sendMessage = (event) => {\r\n    event.preventDefault();\r\n\r\n    if(message) {\r\n      socket.emit('sendMessage', message, () => setMessage(''));\r\n    }\r\n  }\r\n\r\nconsole.log(message,messages);\r\n\r\n  return (\r\n         <div className=\"outerContainer\" >\r\n           <div className=\"container\">\r\n             <Infobar  room={name}/>\r\n             <Input  sendMessage={sendMessage} setMessage={setMessage} message={me}/>\r\n           </div>\r\n         </div>\r\n)}\r\nexport default Chat;"]},"metadata":{},"sourceType":"module"}