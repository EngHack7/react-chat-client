{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eng_hack\\\\Desktop\\\\caht app\\\\client\\\\src\\\\component\\\\Chat\\\\Chat.js\";\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport queryString from \"query-string\";\nimport './Chat.css';\nconst ENDPOINT = \"http://localhost:5000\";\nlet socket;\n\nconst Chat = props => {\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [messages, setmessages] = useState([]);\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(window.location.search);\n    socket = io(ENDPOINT);\n    setRoom(room);\n    setName(name);\n    socket.emit(\"join\", {\n      name,\n      room\n    }, error => {\n      if (error) {\n        alert(error);\n      }\n    });\n  }, [ENDPOINT, window.location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setmessages([...messages, message]);\n    });\n  }, [messages]);\n\n  const sendMessage = event => {\n    event.preventDefault();\n    socket.on(\"sendMessage\", message, () => setmessage(''));\n  };\n\n  console.log(message, messages);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"outerContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    message: message,\n    setMessage: setMessage,\n    sendMessage: sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }\n  })));\n};\n\nexport default Chat;","map":{"version":3,"sources":["C:/Users/Eng_hack/Desktop/caht app/client/src/component/Chat/Chat.js"],"names":["React","useState","useEffect","io","queryString","ENDPOINT","socket","Chat","props","name","setName","room","setRoom","messages","setmessages","message","setMessage","parse","window","location","search","emit","error","alert","on","sendMessage","event","preventDefault","setmessage","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAO,YAAP;AACA,MAAMC,QAAQ,GAAI,uBAAlB;AACA,IAAIC,MAAJ;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,EAAD,CAAtC;AAIAC,EAAAA,SAAS,CAAC,MAAM;AAEd,UAAM;AAAEO,MAAAA,IAAF;AAAQE,MAAAA;AAAR,QAAiBP,WAAW,CAACa,KAAZ,CAAkBC,MAAM,CAACC,QAAP,CAAgBC,MAAlC,CAAvB;AAEAd,IAAAA,MAAM,GAAGH,EAAE,CAACE,QAAD,CAAX;AAEAO,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAD,IAAAA,OAAO,CAACD,IAAD,CAAP;AAEAH,IAAAA,MAAM,CAACe,IAAP,CAAY,MAAZ,EAAqB;AAACZ,MAAAA,IAAD;AAAQE,MAAAA;AAAR,KAArB,EAAqCW,KAAD,IAAW;AAC5C,UAAIA,KAAJ,EAAW;AACTC,QAAAA,KAAK,CAACD,KAAD,CAAL;AACD;AACH,KAJD;AAOD,GAhBQ,EAgBN,CAACjB,QAAD,EAAWa,MAAM,CAACC,QAAP,CAAgBC,MAA3B,CAhBM,CAAT;AAkBAlB,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,MAAM,CAACkB,EAAP,CAAU,SAAV,EAAuBT,OAAD,IAAY;AACjCD,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAaE,OAAb,CAAD,CAAX;AACA,KAFD;AAEG,GAHI,EAGF,CAACF,QAAD,CAHE,CAAT;;AASA,QAAMY,WAAW,GAAIC,KAAD,IAAU;AAC7BA,IAAAA,KAAK,CAACC,cAAN;AACArB,IAAAA,MAAM,CAACkB,EAAP,CAAU,aAAV,EAAyBT,OAAzB,EAAkC,MAAKa,UAAU,CAAC,EAAD,CAAjD;AACA,GAHD;;AAKFC,EAAAA,OAAO,CAACC,GAAR,CAAYf,OAAZ,EAAoBF,QAApB;AAEE,sBACO;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAO,IAAA,OAAO,EAAEE,OAAhB;AAAyB,IAAA,UAAU,EAAEC,UAArC;AAAiD,IAAA,WAAW,EAAES,WAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADF,CADP;AAMA,CAhDF;;AAiDA,eAAelB,IAAf","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport io from 'socket.io-client';\r\nimport queryString from \"query-string\";\r\nimport './Chat.css';\r\nconst ENDPOINT  = \"http://localhost:5000\";\r\nlet socket;\r\n\r\nconst Chat = (props) => {\r\n  const [name, setName] = useState('');\r\n  const [room, setRoom] = useState('');\r\n  const [messages, setmessages] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    \r\n    const { name, room } = queryString.parse(window.location.search);\r\n\r\n    socket = io(ENDPOINT);\r\n\r\n    setRoom(room);\r\n    setName(name)\r\n\r\n    socket.emit(\"join\" , {name , room}, (error) => {\r\n       if (error) {\r\n         alert(error)\r\n       }\r\n    })\r\n   \r\n    \r\n  }, [ENDPOINT, window.location.search]);\r\n  \r\n  useEffect(() => {\r\n    socket.on('message' , (message) =>{\r\n     setmessages([...messages,message])\r\n    })} ,[messages]\r\n\r\n  \r\n  )\r\n\r\n\r\n  const sendMessage = (event) =>{\r\n   event.preventDefault()\r\n   socket.on(\"sendMessage\", message ,()=> setmessage(''))\r\n  }\r\n\r\nconsole.log(message,messages);\r\n\r\n  return (\r\n         <div className=\"outerContainer\" >\r\n           <div className=\"container\">\r\n           <input message={message} setMessage={setMessage} sendMessage={sendMessage} />\r\n           </div>\r\n         </div>\r\n)}\r\nexport default Chat;"]},"metadata":{},"sourceType":"module"}